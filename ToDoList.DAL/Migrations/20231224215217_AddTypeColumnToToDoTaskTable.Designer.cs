// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoList.DAL.Data;

#nullable disable

namespace ToDoList.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231224215217_AddTypeColumnToToDoTaskTable")]
    partial class AddTypeColumnToToDoTaskTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ToDoList.DAL.Entity.ToDoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalDescription")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("Description");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TaskEndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("End time");

                    b.Property<DateTime>("TaskStartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Start time");

                    b.Property<string>("TaskTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalDescription = "Just do nothing",
                            Status = "Done",
                            TaskEndTime = new DateTime(2023, 12, 25, 23, 52, 16, 756, DateTimeKind.Local).AddTicks(3858),
                            TaskStartTime = new DateTime(2023, 12, 24, 23, 52, 16, 756, DateTimeKind.Local).AddTicks(3804),
                            TaskTitle = "Do nothing1",
                            Type = "feature"
                        },
                        new
                        {
                            Id = 2,
                            AdditionalDescription = "Just do nothing",
                            Status = "In progress",
                            TaskEndTime = new DateTime(2023, 12, 25, 23, 52, 16, 756, DateTimeKind.Local).AddTicks(3870),
                            TaskStartTime = new DateTime(2023, 12, 24, 23, 52, 16, 756, DateTimeKind.Local).AddTicks(3866),
                            TaskTitle = "Do nothing2",
                            Type = "bug"
                        },
                        new
                        {
                            Id = 3,
                            AdditionalDescription = "Just do nothing",
                            Status = "In progress",
                            TaskEndTime = new DateTime(2023, 12, 25, 23, 52, 16, 756, DateTimeKind.Local).AddTicks(3879),
                            TaskStartTime = new DateTime(2023, 12, 24, 23, 52, 16, 756, DateTimeKind.Local).AddTicks(3875),
                            TaskTitle = "Do nothing3",
                            Type = "feature"
                        },
                        new
                        {
                            Id = 4,
                            AdditionalDescription = "Just do nothing",
                            Status = "To do",
                            TaskEndTime = new DateTime(2023, 12, 26, 23, 52, 16, 756, DateTimeKind.Local).AddTicks(3886),
                            TaskStartTime = new DateTime(2023, 12, 24, 23, 52, 16, 756, DateTimeKind.Local).AddTicks(3882),
                            TaskTitle = "Do nothing4",
                            Type = "bug"
                        },
                        new
                        {
                            Id = 5,
                            AdditionalDescription = "Just do nothing",
                            Status = "To do",
                            TaskEndTime = new DateTime(2023, 12, 27, 23, 52, 16, 756, DateTimeKind.Local).AddTicks(3898),
                            TaskStartTime = new DateTime(2023, 12, 24, 23, 52, 16, 756, DateTimeKind.Local).AddTicks(3896),
                            TaskTitle = "Do nothing5",
                            Type = "feature"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
